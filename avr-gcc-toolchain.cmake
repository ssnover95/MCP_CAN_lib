set( CMAKE_SYSTEM_NAME       Generic )
set( CMAKE_SYSTEM_PROCESSOR  avr )

set( TOOLCHAIN_PATH $ENV{AVR_TOOLCHAIN_BIN} )
set( CROSS_COMPILE avr- )
set( TOOLCHAIN_INCLUDE_PATH "${TOOLCHAIN_PATH}/../avr/include/" )


set( CMAKE_C_COMPILER    "${TOOLCHAIN_PATH}/${CROSS_COMPILE}gcc" )
set( CMAKE_CXX_COMPILER  "${TOOLCHAIN_PATH}/${CROSS_COMPILE}g++" )
set( CMAKE_LINKER        "${TOOLCHAIN_PATH}/${CROSS_COMPILE}ld" )
set( CMAKE_AR            "${TOOLCHAIN_PATH}/${CROSS_COMPILE}ar" )

set( CMAKE_OBJCOPY       "${TOOLCHAIN_PATH}/${CROSS_COMPILE}objcopy"
     CACHE FILEPATH "The toolchain objcopy command " FORCE )

set( CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY )

set( CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER )
set( CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY )
set( CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY )
set( CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY )

set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mmcu=atmega328p" )

set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mmcu=atmega328p" )

set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS}" CACHE STRING "CFLAGS" )
set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}" CACHE STRING "CXXFLAGS" )
set( CMAKE_ASM_FLAGS "${CMAKE_C_FLAGS}" CACHE STRING "" )